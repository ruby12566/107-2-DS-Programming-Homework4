oneCommitRecord
# oneCommitRecord
data.frame(author=oneCommitRecord$commit$author$name,
commiter=oneCommitRecord$commit$committer$name,
commitDate=oneCommitRecord$commit$committer$date,
sha=oneCommitRecord$sha,
stringsAsFactors=F
) ->df_commit
df_commit
# df_commit
function(oneCommitRecord){
return(df_commit)
} ->commit_df_fun
commit_df_fun
function(oneCommitRecord){
return(df_commit)
} -> commit_df_fun
commit_df_fun
function(oneCommitRecord){
return(df_commit)
} -> commit_df_fun
commit_df_fun
function(oneCommitRecord){
return(df_commit)
} -> commit_df_fun
commit_df_fun
function(oneCommitRecord){
return(df_commit)
} -> commit_df_fun
commit_df_fun()
function(oneCommitRecord){
return(df_commit)
} -> commit_df_fun
commit_df_fun
commit_df_fun <- function(oneCommitRecord){
return(df_commit)
}
commit_df_fun
# commit_df_fun
commit_df_fun <- function(oneCommitRecord){
return(df_commit)
}
commit_df_fun
# commit_df_fun
commit_df_fun <- function(oneCommitRecord){
return(df_commit)
}
commit_df_fun
# commit_df_fun
commit_df_fun <- function(oneCommitRecord){
return(df_commit)
}
commit_df_fun
# commit_df_fun
commit_df_fun <- function(oneCommitRecord){
return(df_commit)
}
commit_df_fun(commitHistory[[1]])
# commit_df_fun
commit_df_fun <- function(oneCommitRecord){
return(df_commit)
}
commit_df_fun(commitHistory[[1]])
# commit_df_fun
commit_df_fun <- function(oneCommitRecord){
return(df_commit)
}
commit_df_fun(oneCommitRecord)
# commit_df_fun
commit_df_fun <- function(oneCommitRecord){
data.frame(author=oneCommitRecord$commit$author$name,
commiter=oneCommitRecord$commit$committer$name,
commitDate=oneCommitRecord$commit$committer$date,
sha=oneCommitRecord$sha,
stringsAsFactors=F
) ->df_commit
return(df_commit)
}
commit_df_fun
# commit_df_fun
commit_df_fun <- function(oneCommitRecord){
data.frame(author=oneCommitRecord$commit$author$name,
commiter=oneCommitRecord$commit$committer$name,
commitDate=oneCommitRecord$commit$committer$date,
sha=oneCommitRecord$sha,
stringsAsFactors=F
) ->df_commit
return(df_commit)
}
commit_df_fun
# commit_df_fun
commit_df_fun <- function(oneCommitRecord){
return(df_commit)
}
commit_df_fun
# commit_df_fun
commit_df_fun <- function(oneCommitRecord){
data.frame(author=oneCommitRecord$commit$author$name,
commiter=oneCommitRecord$commit$committer$name,
commitDate=oneCommitRecord$commit$committer$date,
sha=oneCommitRecord$sha,
stringsAsFactors=F
) ->df_commit
return(df_commit)
}
commit_df_fun
# commit_df_fun
commit_df_fun <- function(oneCommitRecord){
data.frame(author=oneCommitRecord$commit$author$name,
commiter=oneCommitRecord$commit$committer$name,
commitDate=oneCommitRecord$commit$committer$date,
sha=oneCommitRecord$sha,
stringsAsFactors=F
) ->df_commit
return(df_commit)
}
commit_df_fun(oneCommitRecord)
# commit_df_fun
commit_df_fun <- function(oneCommitRecord){
data.frame(author=oneCommitRecord$commit$author$name,
commiter=oneCommitRecord$commit$committer$name,
commitDate=oneCommitRecord$commit$committer$date,
sha=oneCommitRecord$sha,
stringsAsFactors=F
) ->df_commit
return(df_commit)
}
commit_df_fun
# commit_df_fun
library(httr)
exhibitionList <- content(GET("https://cloud.culture.tw/frontsite/trans/SearchShowAction.do?method=doFindTypeJ&category=6"))
View(exhibitionList)
map_dfr(commitHistory,commit_df_fun) -> df_allCommits
df_allCommits
# df_allCommits
knitr::opts_chunk$set(echo = TRUE)
library(readr)
invoiceList <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/invoiceList.csv",
col_types = cols(訂單時間.以訂單時區顯示. = col_character()))
names(invoiceList)[[2]] <- "訂單時區之下單時間"
View(invoiceList)
(invoiceList$訂單時區=="America/New_York") -> nyLogical
(invoiceList$訂單時區=="Asia/Taipei") -> tpLogical
invoiceList$nyLogical <- nyLogical
invoiceList$tpLogical <- tpLogical
library(lubridate)
ymd_hms(invoiceList$`訂單時區之下單時間`[nyLogical],
tz="America/New_York") -> nyDateTime
invoiceList$UTC時間[nyLogical] <-
with_tz(nyDateTime,tzone="UTC")
ymd_hms(invoiceList$`訂單時區之下單時間`[tpLogical],
tz="Asia/Taipei") -> tpDateTime
invoiceList$UTC時間[tpLogical] <-
with_tz(tpDateTime,tzone="UTC")
invoiceList
(df_allCommits$author == df_allCommits$commiter ) -> logical
df_allCommits$samePerson
# df_allCommits$samePerson
(df_allCommits[[1]] == df_allCommits[[2]]) -> samePerson
df_allCommits$samePerson
# df_allCommits$samePerson
df_allCommits$author -> A
df_allCommits$commiter -> B
A == B -> logical
df_allCommits$logical -> samePerson
df_allCommits$samePerson
# df_allCommits$samePerson
df_allCommits$author -> A
df_allCommits$commiter -> B
A == B -> logical
df_allCommits$logical -> samePerson
df_allCommits$samePerson
# df_allCommits$samePerson
str_detect(df_allCommits$author,df_allCommits$commiter) -> samePerson
df_allCommits$samePerson
# df_allCommits$samePerson
str_detect(df_allCommits$author,df_allCommits$commiter) -> samePerson
df_allCommits$samePerson
# df_allCommits$samePerson
str_detect(df_allCommits$author,df_allCommits$commiter) -> samePerson
samePerson
df_allCommits$samePerson
# df_allCommits$samePerson
str_detect(df_allCommits$author,df_allCommits$commiter) -> samePerson
df_allCommits$samePerson ->samePerson
df_allCommits$samePerson
# df_allCommits$samePerson
str_detect(df_allCommits$author,df_allCommits$commiter) -> samePerson
df_allCommits$samePerson ->samePerson
df_allCommits$samePerson
# df_allCommits$samePerson
str_detect(df_allCommits$author,df_allCommits$commiter) -> samePerson
df_allCommits$samePerson ->samePerson
df_allCommits
df_allCommits$samePerson
# df_allCommits$samePerson
library(readr)
exData3 <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/exData3.csv",
col_types = cols(
匯率 = col_number(),
期間 = col_character()))
names(exData3)
class(exData3$期間)
class(exData3$期間)
#取出 期間 轉成 date
exData3$期間 -> .temp
library(lubridate)
ymd(.temp) -> exData3$期間
ymd(exData3$期間) -> exData3$期間
exData3$isAsiaCrisis<- (exData3$期間>=ymd("1997-06-01")& exData3$期間<=ymd("1998-12-01"))
class(exData3$isAsiaCrisis)
logiAsiaCrisis <- exData3$isAsiaCrisis
exData3[logiAsiaCrisis, ]
exData3[exData3$isAsiaCrisis==T ,]
exData3[exData3$isAsiaCrisis, ]
exampleDF <- data.frame(
exchangeRate=c(22,3,3,2,7,12,13),
isAsiaCrisis=c(T,T,F,F,F,T,T)
)
exampleDF
View(exData3)
str_detect(df_allCodf_ammits$author,df_allCommits$commiter) -> df_allCommits$samePerson
df_allCommits$samePerson <- str_detect(df_allCodf_ammits$author,df_allCommits$commiter)
df_allCommits$samePerson <- str_detect(df_allCodf_ammits$author,df_allCommits$commiter)
df_allCommits$samePerson <- (df_allCommits$author == df_allCommits$commiter)
df_allCommits
df_allCommits$samePerson
# df_allCommits$samePerson
df_allCommits[samePerson,]->df_validCommits
df_validCommits
# df_validCommits
df_allCommits[samePerson,] ->df_validCommits
df_validCommits
# df_validCommits
df_allCommits$samePerson ->valid
df_allCommits[valid,] ->df_validCommits
df_validCommits
# df_validCommits
ymd_hms(df_validCommits$commitDate,tz="Asia/Taipei")-> df_validCommits$commitDate
df_validCommits$commitDate
# df_validCommits$commitDate
ymd_hms(df_validCommits$commitDate,tz="Asia/Taipei")-> df_validCommits$commitDate
class(df_validCommits$commitDate)
df_validCommits$commitDate
# df_validCommits$commitDate
df_validCommits$commitDate[10:11]->df_validCommits$hh
df_validCommits$commitDate[10:11]->df_validCommits$hh
df_validCommits$commitDate[[1]]->df_validCommits$hh
df_validCommits$hh
# df_validCommits$hh
hour(df_validCommits$commitDate)->df_validCommits$hh
df_validCommits$hh
# df_validCommits$hh
hour(df_validCommits$commitDate)->df_validCommits$hh
class(df_validCommits$hh)
df_validCommits$hh
# df_validCommits$hh
str_c(year(df_validCommits$commitDate),"-",month(df_validCommits$commitDate),"-",day(df_validCommits$commitDate))->df_validCommits$date
ymd(df_validCommits$date)-> df_validCommits$date
df_validCommits$date
# df_validCommits$date
str_c(year(df_validCommits$commitDate),"-",month(df_validCommits$commitDate),"-",day(df_validCommits$commitDate))->df_validCommits$date
ymd(df_validCommits$date)-> df_validCommits$date
class(df_validCommits$date)
df_validCommits$date
# df_validCommits$date
str_c(year(df_validCommits$commitDate),"-",month(df_validCommits$commitDate),"-",day(df_validCommits$commitDate))->df_validCommits$date
class(df_validCommits$date)
ymd(df_validCommits$date)-> df_validCommits$date
class(df_validCommits$date)
df_validCommits$date
# df_validCommits$date
str_c(year(df_validCommits$commitDate),"-",month(df_validCommits$commitDate),"-",day(df_validCommits$commitDate))->df_validCommits$date
ymd(df_validCommits$date)-> df_validCommits$date
class(df_validCommits$date)
df_validCommits$date
# df_validCommits$date
wday(df_validCommits$commitDate)->df_validCommits$weekday
class(df_validCommits$weekday)
df_validCommits$weekday
# df_validCommits$weekday
df_validCommits$validCommit <- (1< df_validCommits$weekday < 3 & 12<= df_validCommits$hh <= 23)
df_validCommits$validCommit <- (1< df_validCommits$weekday < 3 & 12 < = df_validCommits$hh < = 23)
df_validCommits$validCommit <- (1<=df_validCommits$weekday <= 3 & 12 < = df_validCommits$hh < = 23)
df_validCommits$validCommit <- (1 =<df_validCommits$weekday =<3 & 12 =< df_validCommits$hh =< 23)
df_validCommits$validCommit <- (1 =<df_validCommits$weekday =<3 & 12 =< df_validCommits$hh =< 23)
df_validCommits$validCommit <- (1 =<df_validCommits$weekday =<3 & 12 =< df_validCommits$hh =< 23)
df_validCommits$validCommit <- (1 = < df_validCommits$weekday = <3 & 12 = < df_validCommits$hh = < 23)
df_validCommits$validCommit<-(df_validCommits$weekday>=1&df_validCommits$weekday<=3)&(df_validCommits$hh>=12&df_validCommits$hh<=23)
df_validCommits$validCommit
# df_validCommits$validCommit
df_validCommits[df_validCommits$validCommit,]-> Subsample
Subsample
df_validCommitsSubsample
df_validCommits[df_validCommits$validCommit,]-> Subsample
Subsample
df_validCommitsSubsample
df_validCommits[df_validCommits$validCommit,]-> Subsample
data.frame(Subsample)->df_validCommitsSubsample
df_validCommitsSubsample
# df_validCommitsSubsample
df_validCommits[df_validCommits$validCommit,]-> Subsample
data.frame(Subsample)->df_validCommitsSubsample
class(df_validCommitsSubsample)
df_validCommitsSubsample
# df_validCommitsSubsample
df_validCommits[df_validCommits$validCommit,]-> Subsample
class(Subsample)
data.frame(Subsample)->df_validCommitsSubsample
df_validCommitsSubsample
# df_validCommitsSubsample
df_validCommits[df_validCommits$validCommit,]-> df_validCommitsSubsample
df_validCommitsSubsample
# df_validCommitsSubsample
length(df_validCommits$commitDate)
validCounts
length(df_validCommitsSubsample$commitDate)
validCounts
length(df_validCommitsSubsample$commitDate)
nrow(df_validCommitsSubsample)
validCounts
hour<- hour(df_validCommitsSubsample)
hour <- hour(df_validCommitsSubsample)
hour <- hour(df_validCommitsSubsample$commitDate)
nrow(df_validCommitsSubsample)
validCounts
hour <- hour(df_validCommitsSubsample$commitDate)
nrow(df_validCommitsSubsample)
validCounts
hour <- hour(df_validCommitsSubsample$commitDate)
hour
nrow(df_validCommitsSubsample)
validCounts
hour <- date_names(df_validCommitsSubsample$commitDate)
hour <- date_names_lang(df_validCommitsSubsample$commitDate)
hour <- date(df_validCommitsSubsample$commitDate)
hour
nrow(df_validCommitsSubsample)
validCounts
date <- date(df_validCommitsSubsample$commitDate)
date
nrow(df_validCommitsSubsample)
validCounts
df_validCommitsSubsample[[1]]
nrow(df_validCommitsSubsample)
validCounts
df_validCommitsSubsample[[3]]
nrow(df_validCommitsSubsample)
validCounts
df_validCommitsSubsample[[3]][[1]]
nrow(df_validCommitsSubsample)
validCounts
nrow(df_validCommitsSubsample)
1<-df_validCommitsSubsample[[3]][[1]]
nrow(df_validCommitsSubsample)
1<-df_validCommitsSubsample[[3]][[1]]
nrow(df_validCommitsSubsample$commitDate)
nrow(df_validCommitsSubsample)
validCounts
nrow(df_validCommitsSubsample$commitDate)
validCounts
nrow(df_validCommitsSubsample$date)
validCounts
df_validCommitsSubsample$date
validCounts
length(df_validCommitsSubsample$date)
validCounts
unique(df_validCommitsSubsample$commitDate)
validCounts
unique(df_validCommitsSubsample$commitDate)
validCounts
nrow(unique(df_validCommitsSubsample$commitDate))
validCounts
lenght(unique(df_validCommitsSubsample$commitDate))
length(unique(df_validCommitsSubsample$commitDate))
validCounts
length(unique(df_validCommitsSubsample$date))
validCounts
unique(df_validCommitsSubsample$date)
validCounts
length(unique(df_validCommitsSubsample$date))
validCounts
validCounts<-length(unique(df_validCommitsSubsample$date))
validCounts
# validCounts
validCounts<-length(unique(df_validCommitsSubsample$date))
class(validCounts)
validCounts
# validCounts
length(unique(df_validCommitsSubsample$date))->validCounts
class(validCounts)
validCounts
# validCounts
valid_commit_count <- function(username,reponame,wday,startHour,endHour){
commitHistory <- content(GET(...))
map_dfr(commitHistory,commit_df_fun) -> df_allCommits
df_allCommits$samePerson <- (df_allCommits$author == df_allCommits$commiter)
df_allCommits$samePerson ->valid
df_allCommits[valid,] ->df_validCommits
ymd_hms(df_validCommits$commitDate,tz="Asia/Taipei")-> df_validCommits$commitDate
hour(df_validCommits$commitDate)->df_validCommits$hh
str_c(year(df_validCommits$commitDate),"-",month(df_validCommits$commitDate),"-",day(df_validCommits$commitDate))->df_validCommits$date
ymd(df_validCommits$date)-> df_validCommits$date
wday(df_validCommits$commitDate)->df_validCommits$weekday
df_validCommits$validCommit<-(df_validCommits$weekday>=1&df_validCommits$weekday<=3)&(df_validCommits$hh>=12&df_validCommits$hh<=23)
df_validCommits[df_validCommits$validCommit,]-> df_validCommitsSubsample
length(unique(df_validCommitsSubsample$date))->validCounts
return(validCounts)
}
valid_commit_count
# valid_commit_count
valid_commit_count <- function(username,reponame,wday,startHour,endHour){
commitHistory <- content(GET(...))
map_dfr(commitHistory,commit_df_fun) -> df_allCommits
df_allCommits$samePerson <- (df_allCommits$author == df_allCommits$commiter)
df_allCommits$samePerson ->valid
df_allCommits[valid,] ->df_validCommits
ymd_hms(df_validCommits$commitDate,tz="Asia/Taipei")-> df_validCommits$commitDate
hour(df_validCommits$commitDate)->df_validCommits$hh
str_c(year(df_validCommits$commitDate),"-",month(df_validCommits$commitDate),"-",day(df_validCommits$commitDate))->df_validCommits$date
ymd(df_validCommits$date)-> df_validCommits$date
wday(df_validCommits$commitDate)->df_validCommits$weekday
wday<-df_validCommits$weekday>=1&df_validCommits$weekday<=3
startHour<-df_validCommits$hh>=12
endHour<-df_validCommits$hh<=23
df_validCommits$validCommit<-(wday)&(startHour)&(endHour)
df_validCommits[df_validCommits$validCommit,]-> df_validCommitsSubsample
length(unique(df_validCommitsSubsample$date))->validCounts
return(validCounts)
}
valid_commit_count
# valid_commit_count
valid_commit_count <- function(username,reponame,wday,startHour,endHour){
commitHistory <- content(GET(...))
map_dfr(commitHistory,commit_df_fun) -> df_allCommits
df_allCommits$samePerson <- (df_allCommits$author == df_allCommits$commiter)
df_allCommits$samePerson ->valid
df_allCommits[valid,] ->df_validCommits
ymd_hms(df_validCommits$commitDate,tz="Asia/Taipei")-> df_validCommits$commitDate
hour(df_validCommits$commitDate)->df_validCommits$hh
str_c(year(df_validCommits$commitDate),"-",month(df_validCommits$commitDate),"-",day(df_validCommits$commitDate))->df_validCommits$date
ymd(df_validCommits$date)-> df_validCommits$date
wday(df_validCommits$commitDate)->df_validCommits$weekday
wday<-df_validCommits$weekday>=1&df_validCommits$weekday<=3
startHour<-df_validCommits$hh>=12
endHour<-df_validCommits$hh<=23
df_validCommits$validCommit<-(wday)&(startHour)&(endHour)
df_validCommits[df_validCommits$validCommit,]-> df_validCommitsSubsample
length(unique(df_validCommitsSubsample$date))->validCounts
return(validCounts)
}
valid_commit_count(ruby12566,107-2-inclass-practice,15,16)
valid_commit_count <- function(username,reponame,wday,startHour,endHour){
commitHistory <- content(GET(...))
map_dfr(commitHistory,commit_df_fun) -> df_allCommits
df_allCommits$samePerson <- (df_allCommits$author == df_allCommits$commiter)
df_allCommits$samePerson ->valid
df_allCommits[valid,] ->df_validCommits
ymd_hms(df_validCommits$commitDate,tz="Asia/Taipei")-> df_validCommits$commitDate
hour(df_validCommits$commitDate)->df_validCommits$hh
str_c(year(df_validCommits$commitDate),"-",month(df_validCommits$commitDate),"-",day(df_validCommits$commitDate))->df_validCommits$date
ymd(df_validCommits$date)-> df_validCommits$date
wday(df_validCommits$commitDate)->df_validCommits$weekday
wday<-df_validCommits$weekday>=1&df_validCommits$weekday<=3
startHour<-df_validCommits$hh>=12
endHour<-df_validCommits$hh<=23
df_validCommits$validCommit<-(wday)&(startHour)&(endHour)
df_validCommits[df_validCommits$validCommit,]-> df_validCommitsSubsample
length(unique(df_validCommitsSubsample$date))->validCounts
return(validCounts)
}
valid_commit_count("ruby12566","107-2-inclass-practice",4,15,16)
valid_commit_count <- function(username,reponame,wday,startHour,endHour){
commitHistory <- content(GET(...))
map_dfr(commitHistory,commit_df_fun) -> df_allCommits
df_allCommits$samePerson <- (df_allCommits$author == df_allCommits$commiter)
df_allCommits$samePerson ->valid
df_allCommits[valid,] ->df_validCommits
ymd_hms(df_validCommits$commitDate,tz="Asia/Taipei")-> df_validCommits$commitDate
hour(df_validCommits$commitDate)->df_validCommits$hh
str_c(year(df_validCommits$commitDate),"-",month(df_validCommits$commitDate),"-",day(df_validCommits$commitDate))->df_validCommits$date
ymd(df_validCommits$date)-> df_validCommits$date
wday(df_validCommits$commitDate)->df_validCommits$weekday
wday<-df_validCommits$weekday>=1&df_validCommits$weekday<=3
startHour<-df_validCommits$hh>=12
endHour<-df_validCommits$hh<=23
df_validCommits$validCommit<-(wday)&(startHour)&(endHour)
df_validCommits[df_validCommits$validCommit,]-> df_validCommitsSubsample
length(unique(df_validCommitsSubsample$date))->validCounts
return(validCounts)
}
valid_commit_count("ruby12566","107-2-inclass-practice",4,15,16)
valid_commit_count <- function(username,reponame,wday,startHour,endHour){
commitHistory <- content(GET(...))
map_dfr(commitHistory,commit_df_fun) -> df_allCommits
df_allCommits$samePerson <- (df_allCommits$author == df_allCommits$commiter)
df_allCommits$samePerson ->valid
df_allCommits[valid,] ->df_validCommits
ymd_hms(df_validCommits$commitDate,tz="Asia/Taipei")-> df_validCommits$commitDate
hour(df_validCommits$commitDate)->df_validCommits$hh
str_c(year(df_validCommits$commitDate),"-",month(df_validCommits$commitDate),"-",day(df_validCommits$commitDate))->df_validCommits$date
ymd(df_validCommits$date)-> df_validCommits$date
wday(df_validCommits$commitDate)->df_validCommits$weekday
wday<-df_validCommits$weekday>=1&df_validCommits$weekday<=3
startHour<-df_validCommits$hh>=12
endHour<-df_validCommits$hh<=23
df_validCommits$validCommit<-(wday)&(startHour)&(endHour)
df_validCommits[df_validCommits$validCommit,]-> df_validCommitsSubsample
length(unique(df_validCommitsSubsample$date))->validCounts
return(validCounts)
}
valid_commit_count("ruby12566","107-2-inclass-practice",4,15,17)
